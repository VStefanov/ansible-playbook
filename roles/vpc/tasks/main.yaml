---
- name: Create VPC
  amazon.aws.ec2_vpc_net:
    state: present
    name: ansible-playbook-vpc
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ aws_region }}"
  register: vpc

- name: Create an Internet Gateway to connect VPC to Internet
  community.aws.ec2_vpc_igw:
    state: present
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
  register: igw

- name: Create Public Subnet
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ item.0 }}"
    az: "{{ item.1 }}"
    region: "{{ aws_region }}"
    map_public: yes
  with_together: 
    - "{{ subnets.public }}"
    - "{{ availability_zones }}"
  register: public_subnets

- name: Create App Subnets
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ item.0 }}"
    az: "{{ item.1 }}"
    region: "{{ aws_region }}"
  with_together:
    - "{{ subnets.app }}"
    - "{{ availability_zones }}"
  register: app_subnets

- name: Create DB Subnets
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ item.0 }}"
    az: "{{ item.1 }}"
    region: "{{ aws_region }}"
  with_together:
    - "{{ subnets.db }}"
    - "{{ availability_zones }}"
  register: db_subnets

- name: Create NAT Gateway Elastic IP
  amazon.aws.ec2_eip:
      state: present
      region: "{{ aws_region }}"
  register: nat_eip

- name: Create NAT Gateway
  amazon.aws.ec2_vpc_nat_gateway:
    subnet_id: "{{ public_subnets.results[0].subnet.id }}"
    allocation_id: "{{ nat_eip.allocation_id }}"
    state: present
    region: "{{ aws_region }}"
  register: nat_gateway

- name: Create Public Route Table
  amazon.aws.ec2_vpc_route_table:
    state: present
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
    subnets:
      - "{{ public_subnets.results[0].subnet.id }}"
      - "{{ public_subnets.results[1].subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_route_table

- name: Create App Route Table
  amazon.aws.ec2_vpc_route_table:
    state: present
    vpc_id: "{{ vpc.vpc.id }}"
    subnets:
      - "{{ app_subnets.results[0].subnet.id }}"
      - "{{ app_subnets.results[1].subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ nat_gateway.nat_gateway_id }}"
    region: "{{ aws_region }}"
  register: app_route_table

- name: Create DB Route Table
  amazon.aws.ec2_vpc_route_table:
    state: present
    vpc_id: "{{ vpc.vpc.id }}"
    subnets:
      - "{{ db_subnets.results[0].subnet.id }}"
      - "{{ db_subnets.results[1].subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ nat_gateway.nat_gateway_id }}"
    region: "{{ aws_region }}"
  register: db_route_table

- name: Create ALB Security Group
  amazon.aws.ec2_security_group:
    state: present
    name: alb-sg
    description: "ALB Security Group"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
    rules:
      - proto: tcp
        ports:
          - 80
        cidr_ip: 0.0.0.0/0
  register: alb_sg


- name: Create Control Node Security Group
  amazon.aws.ec2_security_group:
    state: present
    name: control-node-sg
    description: "Control Node Security Group"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
    rules:
      - proto: tcp
        ports:
          - 22
        cidr_ip: "{{ network_cidr }}"
  register: control_node_sg

- name: Create App Security Group
  amazon.aws.ec2_security_group:
    state: present
    name: app-sg
    description: "App Security Group"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
    rules:
      - proto: tcp
        ports:
          - 80
        group_id: "{{ alb_sg.group_id }}"
      - proto: tcp
        ports:
          - 22
        group_id: "{{ control_node_sg.group_id }}"
  register: app_sg
  
- name: Create DB Security Group
  amazon.aws.ec2_security_group:
    state: present
    name: db-sg
    description: "Database Security Group"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
    rules:
      - proto: tcp
        ports:
          - 3306
        group_id: "{{ app_sg.group_id }}"
  register: db_sg
...